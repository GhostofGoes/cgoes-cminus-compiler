ERROR(8): Unary '?' requires an operand of type int but was given char.
ERROR(9): Unary '?' requires an operand of type int but was given char.
ERROR(9): The operation '?' does not work with arrays.
ERROR(10): Unary '?' requires an operand of type int but was given bool.
ERROR(13): '*=' requires operands of type int but rhs is of type char.
ERROR(14): '*=' requires operands of type int but rhs is of type char.
ERROR(14): The operation '*=' does not work with arrays.
ERROR(15): '*=' requires operands of type int but rhs is of type bool.
ERROR(18): '/=' requires operands of type int but rhs is of type char.
ERROR(19): '/=' requires operands of type int but rhs is of type char.
ERROR(19): The operation '/=' does not work with arrays.
ERROR(20): '/=' requires operands of type int but rhs is of type bool.
ERROR(22): '*=' requires operands of type int but lhs is of type bool.
ERROR(23): '*=' requires operands of type int but lhs is of type bool.
ERROR(23): '*=' requires operands of type int but rhs is of type char.
ERROR(24): '*=' requires operands of type int but lhs is of type bool.
ERROR(24): '*=' requires operands of type int but rhs is of type char.
ERROR(24): The operation '*=' does not work with arrays.
ERROR(25): '*=' requires operands of type int but lhs is of type bool.
ERROR(25): '*=' requires operands of type int but rhs is of type bool.
ERROR(27): '*=' requires operands of type int but lhs is of type char.
ERROR(28): '*=' requires operands of type int but lhs is of type char.
ERROR(28): '*=' requires operands of type int but rhs is of type char.
ERROR(29): '*=' requires operands of type int but lhs is of type char.
ERROR(29): '*=' requires operands of type int but rhs is of type char.
ERROR(29): The operation '*=' does not work with arrays.
ERROR(30): '*=' requires operands of type int but lhs is of type char.
ERROR(30): '*=' requires operands of type int but rhs is of type bool.
ERROR(32): '=' requires operands of the same type but lhs is type char and rhs is int.
ERROR(32): '=' requires operands of the same type but lhs is type int and rhs is char.
ERROR(33): '=' requires operands of the same type but lhs is type int and rhs is char.
ERROR(35): Symbol 'undef' is not defined.
ERROR(36): Symbol 'undef' is not defined.
ERROR(38): '*=' requires operands of type int but lhs is of type char.
ERROR(39): '*=' requires operands of type int but rhs is of type char.
Func input returns type int [line: -1]
|Sibling: 1  Func output returns type void [line: -1]
|   Child: 0  Param *dummy* int [line: -1]
|Sibling: 2  Func inputb returns type bool [line: -1]
|Sibling: 3  Func outputb returns type void [line: -1]
|   Child: 0  Param *dummy* bool [line: -1]
|Sibling: 4  Func inputc returns type char [line: -1]
|Sibling: 5  Func outputc returns type void [line: -1]
|   Child: 0  Param *dummy* char [line: -1]
|Sibling: 6  Func outnl returns type void [line: -1]
|Sibling: 7  Func main returns type void [line: 1]
|   Child: 1  Compound [line: 2]
|   |   Child: 0  Var x int [line: 3]
|   |   |Sibling: 1  Var b bool [line: 4]
|   |   |Sibling: 2  Var c char [line: 5]
|   |   Child: 1  Assign: = Type: int [line: 7]
|   |   |   Child: 0  Id: x Type: int [line: 7]
|   |   |   Child: 1  Op: ? Type: int [line: 7]
|   |   |   |   Child: 0  Const: 3 Type: int [line: 7]
|   |   |Sibling: 1  Assign: = Type: int [line: 8]
|   |   |   Child: 0  Id: x Type: int [line: 8]
|   |   |   Child: 1  Op: ? Type: int [line: 8]
|   |   |   |   Child: 0  Const: 'x' Type: char [line: 8]
|   |   |Sibling: 2  Assign: = Type: int [line: 9]
|   |   |   Child: 0  Id: x Type: int [line: 9]
|   |   |   Child: 1  Op: ? Type: int [line: 9]
|   |   |   |   Child: 0  Const: "dogs" Type: is array of char [line: 9]
|   |   |Sibling: 3  Assign: = Type: int [line: 10]
|   |   |   Child: 0  Id: x Type: int [line: 10]
|   |   |   Child: 1  Op: ? Type: int [line: 10]
|   |   |   |   Child: 0  Const: true Type: bool [line: 10]
|   |   |Sibling: 4  Assign: *= Type: int [line: 12]
|   |   |   Child: 0  Id: x Type: int [line: 12]
|   |   |   Child: 1  Const: 1 Type: int [line: 12]
|   |   |Sibling: 5  Assign: *= Type: int [line: 13]
|   |   |   Child: 0  Id: x Type: int [line: 13]
|   |   |   Child: 1  Const: 'z' Type: char [line: 13]
|   |   |Sibling: 6  Assign: *= Type: int [line: 14]
|   |   |   Child: 0  Id: x Type: int [line: 14]
|   |   |   Child: 1  Const: "dogs" Type: is array of char [line: 14]
|   |   |Sibling: 7  Assign: *= Type: int [line: 15]
|   |   |   Child: 0  Id: x Type: int [line: 15]
|   |   |   Child: 1  Const: true Type: bool [line: 15]
|   |   |Sibling: 8  Assign: /= Type: int [line: 17]
|   |   |   Child: 0  Id: x Type: int [line: 17]
|   |   |   Child: 1  Const: 1 Type: int [line: 17]
|   |   |Sibling: 9  Assign: /= Type: int [line: 18]
|   |   |   Child: 0  Id: x Type: int [line: 18]
|   |   |   Child: 1  Const: 'z' Type: char [line: 18]
|   |   |Sibling: 10  Assign: /= Type: int [line: 19]
|   |   |   Child: 0  Id: x Type: int [line: 19]
|   |   |   Child: 1  Const: "dogs" Type: is array of char [line: 19]
|   |   |Sibling: 11  Assign: /= Type: int [line: 20]
|   |   |   Child: 0  Id: x Type: int [line: 20]
|   |   |   Child: 1  Const: true Type: bool [line: 20]
|   |   |Sibling: 12  Assign: *= Type: int [line: 22]
|   |   |   Child: 0  Id: b Type: bool [line: 22]
|   |   |   Child: 1  Const: 1 Type: int [line: 22]
|   |   |Sibling: 13  Assign: *= Type: int [line: 23]
|   |   |   Child: 0  Id: b Type: bool [line: 23]
|   |   |   Child: 1  Const: 'z' Type: char [line: 23]
|   |   |Sibling: 14  Assign: *= Type: int [line: 24]
|   |   |   Child: 0  Id: b Type: bool [line: 24]
|   |   |   Child: 1  Const: "dogs" Type: is array of char [line: 24]
|   |   |Sibling: 15  Assign: *= Type: int [line: 25]
|   |   |   Child: 0  Id: b Type: bool [line: 25]
|   |   |   Child: 1  Const: true Type: bool [line: 25]
|   |   |Sibling: 16  Assign: *= Type: int [line: 27]
|   |   |   Child: 0  Id: c Type: char [line: 27]
|   |   |   Child: 1  Const: 1 Type: int [line: 27]
|   |   |Sibling: 17  Assign: *= Type: int [line: 28]
|   |   |   Child: 0  Id: c Type: char [line: 28]
|   |   |   Child: 1  Const: 'z' Type: char [line: 28]
|   |   |Sibling: 18  Assign: *= Type: int [line: 29]
|   |   |   Child: 0  Id: c Type: char [line: 29]
|   |   |   Child: 1  Const: "dogs" Type: is array of char [line: 29]
|   |   |Sibling: 19  Assign: *= Type: int [line: 30]
|   |   |   Child: 0  Id: c Type: char [line: 30]
|   |   |   Child: 1  Const: true Type: bool [line: 30]
|   |   |Sibling: 20  Assign: = Type: int [line: 32]
|   |   |   Child: 0  Id: x Type: int [line: 32]
|   |   |   Child: 1  Assign: = Type: char [line: 32]
|   |   |   |   Child: 0  Id: c Type: char [line: 32]
|   |   |   |   Child: 1  Const: 3 Type: int [line: 32]
|   |   |Sibling: 21  Assign: = Type: int [line: 33]
|   |   |   Child: 0  Id: x Type: int [line: 33]
|   |   |   Child: 1  Assign: = Type: int [line: 33]
|   |   |   |   Child: 0  Id: x Type: int [line: 33]
|   |   |   |   Child: 1  Const: 'a' Type: char [line: 33]
|   |   |Sibling: 22  Assign: = Type: int [line: 35]
|   |   |   Child: 0  Id: x Type: int [line: 35]
|   |   |   Child: 1  Assign: = Type: undefined type [line: 35]
|   |   |   |   Child: 0  Id: undef Type: undefined type [line: 35]
|   |   |   |   Child: 1  Const: 3 Type: int [line: 35]
|   |   |Sibling: 23  Assign: = Type: int [line: 36]
|   |   |   Child: 0  Id: x Type: int [line: 36]
|   |   |   Child: 1  Assign: = Type: int [line: 36]
|   |   |   |   Child: 0  Id: x Type: int [line: 36]
|   |   |   |   Child: 1  Id: undef Type: undefined type [line: 36]
|   |   |Sibling: 24  Assign: *= Type: int [line: 38]
|   |   |   Child: 0  Id: x Type: int [line: 38]
|   |   |   Child: 1  Assign: *= Type: int [line: 38]
|   |   |   |   Child: 0  Id: c Type: char [line: 38]
|   |   |   |   Child: 1  Const: 3 Type: int [line: 38]
|   |   |Sibling: 25  Assign: *= Type: int [line: 39]
|   |   |   Child: 0  Id: x Type: int [line: 39]
|   |   |   Child: 1  Assign: *= Type: int [line: 39]
|   |   |   |   Child: 0  Id: x Type: int [line: 39]
|   |   |   |   Child: 1  Const: 'a' Type: char [line: 39]
Number of warnings: 0
Number of errors: 35
