Line 6 Token: INT
Line 6 Token: ID Value: gromit
Line 6 Token: ;
Line 8 Token: ID Value: wallace
Line 8 Token: (
Line 8 Token: INT
Line 8 Token: ID Value: wrong
Line 8 Token: ,
Line 8 Token: ID Value: trousers
Line 8 Token: )
Line 9 Token: {
Line 10 Token: BOOL
Line 10 Token: ID Value: close
Line 10 Token: :
Line 10 Token: BOOLCONST Value: 1  Input: true
Line 10 Token: ,
Line 10 Token: ID Value: shave
Line 10 Token: :
Line 10 Token: BOOLCONST Value: 0  Input: false
Line 10 Token: ;
Line 12 Token: ID Value: close
Line 12 Token: ;
Line 13 Token: ID Value: close
Line 13 Token: =
Line 13 Token: ID Value: shave
Line 13 Token: ;
Line 14 Token: ID Value: wrong
Line 14 Token: =
Line 14 Token: ID Value: trousers
Line 14 Token: %
Line 14 Token: (
Line 14 Token: NUMCONST Value: 666  Input: 666
Line 14 Token: /
Line 14 Token: ID Value: wrong
Line 14 Token: )
Line 14 Token: ;
Line 15 Token: ID Value: gromit
Line 15 Token: =
Line 15 Token: ID Value: wrong
Line 15 Token: *
Line 15 Token: ID Value: trousers
Line 15 Token: -
Line 15 Token: ID Value: gromit
Line 15 Token: +
Line 15 Token: -
Line 15 Token: NUMCONST Value: 42  Input: 42
Line 15 Token: ;
Line 16 Token: ID Value: gromit
Line 16 Token: ADDASS
Line 16 Token: NUMCONST Value: 27182818  Input: 27182818
Line 16 Token: ;
Line 17 Token: ID Value: gromit
Line 17 Token: SUBASS
Line 17 Token: NUMCONST Value: 31415927  Input: 31415927
Line 17 Token: ;
Line 18 Token: ID Value: close
Line 18 Token: =
Line 18 Token: ID Value: wrong
Line 18 Token: <
Line 18 Token: ID Value: trousers
Line 18 Token: &
Line 18 Token: ID Value: trousers
Line 18 Token: LESSEQ
Line 18 Token: ID Value: gromit
Line 18 Token: ;
Line 19 Token: ID Value: shave
Line 19 Token: =
Line 19 Token: ID Value: wrong
Line 19 Token: >
Line 19 Token: ID Value: trousers
Line 19 Token: &
Line 19 Token: ID Value: trousers
Line 19 Token: GRTEQ
Line 19 Token: ID Value: gromit
Line 19 Token: ;
Line 20 Token: {
Line 21 Token: INT
Line 21 Token: ID Value: a
Line 21 Token: ,
Line 21 Token: ID Value: grand
Line 21 Token: :
Line 21 Token: NUMCONST Value: 1  Input: 1
Line 21 Token: /
Line 21 Token: NUMCONST Value: 2  Input: 2
Line 21 Token: ,
Line 21 Token: ID Value: day
Line 21 Token: :
Line 21 Token: NUMCONST Value: 3  Input: 3
Line 21 Token: *
Line 21 Token: NUMCONST Value: 4  Input: 4
Line 21 Token: ,
Line 21 Token: ID Value: out
Line 21 Token: :
Line 21 Token: -
Line 21 Token: NUMCONST Value: 9  Input: 9
Line 21 Token: ;
Line 22 Token: ID Value: a
Line 22 Token: =
Line 22 Token: ID Value: grand
Line 22 Token: ADDASS
Line 22 Token: ID Value: day
Line 22 Token: SUBASS
Line 22 Token: ID Value: out
Line 22 Token: ;
Line 23 Token: }
Line 24 Token: ID Value: close
Line 24 Token: =
Line 24 Token: -
Line 24 Token: NUMCONST Value: 1  Input: 1
Line 24 Token: *
Line 24 Token: NUMCONST Value: 2  Input: 2
Line 24 Token: +
Line 24 Token: NUMCONST Value: 3  Input: 3
Line 24 Token: <
Line 24 Token: NUMCONST Value: 4  Input: 4
Line 24 Token: *
Line 24 Token: NUMCONST Value: 5  Input: 5
Line 24 Token: &
Line 24 Token: NUMCONST Value: 6  Input: 6
Line 24 Token: +
Line 24 Token: NUMCONST Value: 7  Input: 7
Line 24 Token: >
Line 24 Token: -
Line 24 Token: NUMCONST Value: 3  Input: 3
Line 24 Token: ;
Line 25 Token: ID Value: shave
Line 25 Token: =
Line 25 Token: BOOLCONST Value: 1  Input: true
Line 25 Token: |
Line 25 Token: (
Line 25 Token: (
Line 25 Token: -
Line 25 Token: (
Line 25 Token: NUMCONST Value: 1  Input: 1
Line 25 Token: *
Line 25 Token: (
Line 25 Token: NUMCONST Value: 2  Input: 2
Line 25 Token: +
Line 25 Token: NUMCONST Value: 3  Input: 3
Line 25 Token: )
Line 25 Token: )
Line 25 Token: )
Line 25 Token: <
Line 25 Token: (
Line 25 Token: NUMCONST Value: 4  Input: 4
Line 25 Token: *
Line 25 Token: NUMCONST Value: 5  Input: 5
Line 25 Token: )
Line 25 Token: &
Line 25 Token: (
Line 25 Token: (
Line 25 Token: NUMCONST Value: 6  Input: 6
Line 25 Token: +
Line 25 Token: NUMCONST Value: 7  Input: 7
Line 25 Token: )
Line 25 Token: >
Line 25 Token: (
Line 25 Token: -
Line 25 Token: NUMCONST Value: 3  Input: 3
Line 25 Token: )
Line 25 Token: )
Line 25 Token: )
Line 25 Token: ;
Line 26 Token: IF
Line 26 Token: (
Line 26 Token: ID Value: shave
Line 26 Token: NOTEQ
Line 26 Token: ID Value: close
Line 26 Token: )
Line 26 Token: ID Value: shave
Line 26 Token: =
Line 26 Token: !
Line 26 Token: ID Value: close
Line 26 Token: ;
Line 27 Token: IF
Line 27 Token: (
Line 27 Token: !
Line 27 Token: (
Line 27 Token: ID Value: shave
Line 27 Token: EQ
Line 27 Token: ID Value: close
Line 27 Token: )
Line 27 Token: |
Line 27 Token: !
Line 27 Token: ID Value: close
Line 27 Token: )
Line 27 Token: ID Value: shave
Line 27 Token: =
Line 27 Token: BOOLCONST Value: 1  Input: true
Line 27 Token: ;
Line 28 Token: ELSE
Line 28 Token: ID Value: close
Line 28 Token: =
Line 28 Token: BOOLCONST Value: 0  Input: false
Line 28 Token: ;
Line 29 Token: WHILE
Line 29 Token: (
Line 29 Token: ID Value: shave
Line 29 Token: )
Line 29 Token: {
Line 30 Token: STATIC
Line 30 Token: INT
Line 30 Token: ID Value: were
Line 30 Token: ,
Line 30 Token: ID Value: rabbit
Line 30 Token: ;
Line 31 Token: STATIC
Line 31 Token: INT
Line 31 Token: ID Value: sheep
Line 31 Token: [
Line 31 Token: NUMCONST Value: 10  Input: 10
Line 31 Token: ]
Line 31 Token: ;
Line 33 Token: ID Value: sheep
Line 33 Token: [
Line 33 Token: NUMCONST Value: 2  Input: 2
Line 33 Token: ]
Line 33 Token: =
Line 33 Token: NUMCONST Value: 1618  Input: 1618
Line 33 Token: ;
Line 34 Token: IF
Line 34 Token: (
Line 34 Token: ID Value: sheep
Line 34 Token: [
Line 34 Token: NUMCONST Value: 2  Input: 2
Line 34 Token: ]
Line 34 Token: <
Line 34 Token: NUMCONST Value: 496  Input: 496
Line 34 Token: )
Line 34 Token: BREAK
Line 34 Token: ;
Line 35 Token: ID Value: wallace
Line 35 Token: (
Line 35 Token: ID Value: gromit
Line 35 Token: DEC
Line 35 Token: ,
Line 35 Token: ID Value: were
Line 35 Token: -
Line 35 Token: ID Value: rabbit
Line 35 Token: )
Line 35 Token: ;
Line 36 Token: {
Line 37 Token: INT
Line 37 Token: ID Value: the
Line 37 Token: ,
Line 37 Token: ID Value: wrong
Line 37 Token: ,
Line 37 Token: ID Value: trousers
Line 37 Token: ;
Line 39 Token: ID Value: the
Line 39 Token: =
Line 39 Token: ID Value: wrong
Line 39 Token: ADDASS
Line 39 Token: ID Value: trousers
Line 39 Token: INC
Line 39 Token: ;
Line 40 Token: IF
Line 40 Token: (
Line 40 Token: ID Value: were
Line 40 Token: EQ
Line 40 Token: ID Value: rabbit
Line 40 Token: )
Line 40 Token: ID Value: were
Line 40 Token: =
Line 40 Token: ID Value: wrong
Line 40 Token: DEC
Line 40 Token: ;
Line 41 Token: }
Line 42 Token: }
Line 43 Token: RETURN
Line 43 Token: ;
Line 44 Token: }
Line 47 Token: BOOL
Line 47 Token: ID Value: penguin
Line 47 Token: (
Line 47 Token: CHAR
Line 47 Token: ID Value: Feathers
Line 47 Token: ,
Line 47 Token: ID Value: McGraw
Line 47 Token: [
Line 47 Token: ]
Line 47 Token: )
Line 48 Token: {
Line 49 Token: STATIC
Line 49 Token: CHAR
Line 49 Token: ID Value: tottington
Line 49 Token: :
Line 49 Token: CHARCONST Value: 'x'  Input: 'x'
Line 49 Token: ;
Line 50 Token: CHAR
Line 50 Token: ID Value: Wensleydale
Line 50 Token: [
Line 50 Token: NUMCONST Value: 17  Input: 17
Line 50 Token: ]
Line 50 Token: :
Line 50 Token: STRINGCONST Value of length 10: "cheeeeeese"  Input: "cheeeeeese"
Line 50 Token: ;
Line 52 Token: ID Value: tottington
Line 52 Token: =
Line 52 Token: ID Value: Feathers
Line 52 Token: ;
Line 53 Token: ID Value: McGraw
Line 53 Token: =
Line 53 Token: ID Value: Feathers
Line 53 Token: ;
Line 54 Token: ID Value: Wensleydale
Line 54 Token: =
Line 54 Token: ID Value: McGraw
Line 54 Token: ;
Line 55 Token: ID Value: Wensleydale
Line 55 Token: [
Line 55 Token: *
Line 55 Token: ID Value: McGraw
Line 55 Token: ]
Line 55 Token: =
Line 55 Token: CHARCONST Value: '*'  Input: '*'
Line 55 Token: ;
Line 56 Token: ID Value: McGraw
Line 56 Token: =
Line 56 Token: STRINGCONST Value of length 26: "A Matter of Loaf and Death"  Input: "A Matter of Loaf and Death"
Line 56 Token: ;
Line 58 Token: {
Line 58 Token: CHAR
Line 58 Token: ID Value: c
Line 58 Token: ;
Line 59 Token: FOREACH
Line 59 Token: (
Line 59 Token: ID Value: c
Line 59 Token: IN
Line 59 Token: ID Value: McGraw
Line 59 Token: )
Line 59 Token: IF
Line 59 Token: (
Line 59 Token: ID Value: c
Line 59 Token: EQ
Line 59 Token: CHARCONST Value: 'f'  Input: 'f'
Line 59 Token: )
Line 59 Token: RETURN
Line 59 Token: BOOLCONST Value: 1  Input: true
Line 59 Token: ;
Line 60 Token: }
Line 61 Token: }
Line 63 Token: INT
Line 63 Token: ID Value: Wendolene
Line 63 Token: (
Line 63 Token: INT
Line 63 Token: ID Value: wool
Line 63 Token: ;
Line 63 Token: BOOL
Line 63 Token: ID Value: shaun
Line 63 Token: ;
Line 63 Token: INT
Line 63 Token: ID Value: yarn
Line 63 Token: [
Line 63 Token: ]
Line 63 Token: ;
Line 63 Token: BOOL
Line 63 Token: ID Value: preston
Line 63 Token: [
Line 63 Token: ]
Line 63 Token: )
Line 64 Token: {
Line 65 Token: INT
Line 65 Token: ID Value: void
Line 65 Token: ;
Line 66 Token: RETURN
Line 66 Token: ID Value: wool
Line 66 Token: +
Line 66 Token: ID Value: yarn
Line 66 Token: [
Line 66 Token: NUMCONST Value: 0  Input: 0
Line 66 Token: ]
Line 66 Token: +
Line 66 Token: *
Line 66 Token: ID Value: yarn
Line 66 Token: +
Line 66 Token: ID Value: yarn
Line 66 Token: [
Line 66 Token: NUMCONST Value: 7  Input: 7
Line 66 Token: *
Line 66 Token: ID Value: wool
Line 66 Token: ]
Line 66 Token: ;
Line 67 Token: }
Line 70 Token: BOOL
Line 70 Token: ID Value: ramsBottom
Line 70 Token: (
Line 70 Token: )
Line 71 Token: {
Line 72 Token: INT
Line 72 Token: ID Value: chicken
Line 72 Token: [
Line 72 Token: NUMCONST Value: 2  Input: 2
Line 72 Token: ]
Line 72 Token: ;
Line 73 Token: BOOL
Line 73 Token: ID Value: run
Line 73 Token: [
Line 73 Token: NUMCONST Value: 3  Input: 3
Line 73 Token: ]
Line 73 Token: ;
Line 74 Token: INT
Line 74 Token: ID Value: wallace
Line 74 Token: [
Line 74 Token: NUMCONST Value: 2  Input: 2
Line 74 Token: ]
Line 74 Token: ,
Line 74 Token: ID Value: gromit
Line 74 Token: [
Line 74 Token: NUMCONST Value: 3  Input: 3
Line 74 Token: ]
Line 74 Token: ;
Line 76 Token: NUMCONST Value: 42  Input: 42
Line 76 Token: *
Line 76 Token: ID Value: Wendolene
Line 76 Token: (
Line 76 Token: NUMCONST Value: 1  Input: 1
Line 76 Token: +
Line 76 Token: NUMCONST Value: 2  Input: 2
Line 76 Token: +
Line 76 Token: NUMCONST Value: 3  Input: 3
Line 76 Token: ,
Line 76 Token: !
Line 76 Token: BOOLCONST Value: 1  Input: true
Line 76 Token: |
Line 76 Token: BOOLCONST Value: 1  Input: true
Line 76 Token: &
Line 76 Token: BOOLCONST Value: 0  Input: false
Line 76 Token: ,
Line 76 Token: ID Value: chicken
Line 76 Token: ,
Line 76 Token: ID Value: run
Line 76 Token: )
Line 76 Token: ;
Line 77 Token: ID Value: run
Line 77 Token: [
Line 77 Token: *
Line 77 Token: ID Value: run
Line 77 Token: -
Line 77 Token: NUMCONST Value: 1  Input: 1
Line 77 Token: ]
Line 77 Token: ;
Line 79 Token: RETURN
Line 79 Token: !
Line 79 Token: ID Value: wallace
Line 79 Token: [
Line 79 Token: NUMCONST Value: 1  Input: 1
Line 79 Token: ]
Line 79 Token: GRTEQ
Line 79 Token: -
Line 79 Token: ID Value: gromit
Line 79 Token: [
Line 79 Token: NUMCONST Value: 2  Input: 2
Line 79 Token: ]
Line 79 Token: *
Line 79 Token: NUMCONST Value: 3  Input: 3
Line 79 Token: ;
Line 80 Token: }
Line 82 Token: INT
Line 82 Token: ID Value: cheese
Line 82 Token: (
Line 82 Token: INT
Line 82 Token: ID Value: x
Line 82 Token: ,
Line 82 Token: ID Value: y
Line 82 Token: )
Line 82 Token: WHILE
Line 82 Token: (
Line 82 Token: ID Value: x
Line 82 Token: >
Line 82 Token: NUMCONST Value: 0  Input: 0
Line 82 Token: )
Line 82 Token: IF
Line 82 Token: (
Line 82 Token: ID Value: y
Line 82 Token: >
Line 82 Token: NUMCONST Value: 3  Input: 3
Line 82 Token: )
Line 82 Token: ID Value: x
Line 82 Token: DEC
Line 82 Token: ;
Line 82 Token: ELSE
Line 82 Token: RETURN
Line 82 Token: ID Value: x
Line 82 Token: *
Line 82 Token: ID Value: x
Line 82 Token: %
Line 82 Token: ID Value: y
Line 82 Token: ;
Line 84 Token: INT
Line 84 Token: ID Value: Wensleydale
Line 84 Token: (
Line 84 Token: INT
Line 84 Token: ID Value: x
Line 84 Token: ;
Line 84 Token: INT
Line 84 Token: ID Value: y
Line 84 Token: )
Line 84 Token: RETURN
Line 84 Token: ID Value: cheese
Line 84 Token: (
Line 84 Token: ID Value: x
Line 84 Token: ,
Line 84 Token: ID Value: gromit
Line 84 Token: )
Line 84 Token: ;
Line 86 Token: INT
Line 86 Token: ID Value: main
Line 86 Token: (
Line 86 Token: )
Line 87 Token: {
Line 88 Token: INT
Line 88 Token: ID Value: wool
Line 88 Token: ,
Line 88 Token: ID Value: yarn
Line 88 Token: [
Line 88 Token: NUMCONST Value: 113  Input: 113
Line 88 Token: ]
Line 88 Token: ;
Line 89 Token: BOOL
Line 89 Token: ID Value: shaun
Line 89 Token: ,
Line 89 Token: ID Value: preston
Line 89 Token: [
Line 89 Token: NUMCONST Value: 22  Input: 22
Line 89 Token: ]
Line 89 Token: ;
Line 91 Token: ID Value: wallace
Line 91 Token: (
Line 91 Token: ID Value: cheese
Line 91 Token: (
Line 91 Token: NUMCONST Value: 62  Input: 62
Line 91 Token: ,
Line 91 Token: -
Line 91 Token: NUMCONST Value: 311  Input: 311
Line 91 Token: )
Line 91 Token: ,
Line 91 Token: ID Value: gromit
Line 91 Token: )
Line 91 Token: ;
Line 92 Token: RETURN
Line 92 Token: ID Value: Wendolene
Line 92 Token: (
Line 92 Token: *
Line 92 Token: ID Value: preston
Line 92 Token: *
Line 92 Token: *
Line 92 Token: ID Value: yarn
Line 92 Token: ,
Line 92 Token: ID Value: shaun
Line 92 Token: ,
Line 92 Token: ID Value: yarn
Line 92 Token: ,
Line 92 Token: ID Value: preston
Line 92 Token: )
Line 92 Token: ;
Line 93 Token: }
Line 95 Token: BOOL
Line 95 Token: ID Value: aBigLongVariableName6
Line 95 Token: ;
Line 96 Token: INT
Line 96 Token: ID Value: odd
Line 96 Token: ,
Line 96 Token: ID Value: separation
Line 96 Token: ,
Line 96 Token: ID Value: of
Line 96 Token: ,
Line 96 Token: ID Value: stuff
Line 96 Token: ;
Line 98 Token: CHAR
Line 98 Token: ID Value: ant
Line 98 Token: [
Line 98 Token: NUMCONST Value: 10  Input: 10
Line 98 Token: ]
Line 98 Token: :
Line 98 Token: STRINGCONST Value of length 2: ""'"  Input: "\"'"
Line 98 Token: ;
Line 99 Token: CHAR
Line 99 Token: ID Value: bat
Line 99 Token: :
Line 99 Token: STRINGCONST Value of length 1: "'"  Input: "\'"
Line 99 Token: ;
Line 100 Token: CHAR
Line 100 Token: ID Value: cat
Line 100 Token: [
Line 100 Token: NUMCONST Value: 10  Input: 10
Line 100 Token: ]
Line 100 Token: :
Line 100 Token: STRINGCONST Value of length 4: "t
"  Input: "\t\n\0\\"
Line 100 Token: ;
Line 101 Token: CHAR
Line 101 Token: ID Value: dog
Line 101 Token: :
Line 101 Token: CHARCONST Value: 't'  Input: '\t'
Line 101 Token: ;
