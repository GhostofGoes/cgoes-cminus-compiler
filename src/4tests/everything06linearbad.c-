// C-F15
//
// Test all the basic elements of C-
//
//
int
gromit
;
wallace
(
int
wrong
,
trousers
666
{
666
close
:
true
,
shave
:
false
;
1729
;
xxx
close
;
11
*
22
+
33
*
44
;
close
666
=
666
shave
;
=
trousers
xxx
(
666
666
/
wrong
)
xxx
;
666
gromit
=
wrong
*
-
gromit
666
+
-
666
;
xxx
27182818
;
gromit
666
31415927
666
;
gromit
/=
(
wrong
xxx
*=
42
;
close
=
wrong
<
trousers
666
trousers
gromit
;
shave
=
wrong
>
xxx
trousers
&
trousers
>=
gromit
;
{
int
xxx
a
666
:
1
666
2
,
day
:
3
*
4
,
666
out
-
9
666
a
=
gr&
+=
666
day
-=
out
xxx
;
}
close
=
-
1
*
2
+
3
<
4
666
5
&
6
+
7
-
3
;
shave
=
true
|
(
xxx
-
(
1
*
(
2
xxx
3
)
xxx
)
)
<
(
4
*
5
)
&
(
(
6
+
7
)
>
(
-
3
xxx
)
666
)
)
;
if
(
shave
!=
close
)
shave
666
=
!
666
;
if
666
!
(
shave
==
close
|
!
close
shave
=
true
;
else
=
666
false
;
while
(
shave
)
{
static
int
were
,
;
static
xxx
sheep
666
[
10
]
;
sheep
[
xxx
]
=
1618
;
if
(
sheep
[
2
]
<
496
)
break
;
wallace
(
gromit
--
,
were
-
)
;
{
int
the
666
wrong
,
trousers
;
xxx
=
666
+=
trousers
++
;
if
(
were
==
rabbit
666
xxx
were
=
wrong
--
;
// assignment is in test
666
return
;
666
bool
penguin
(
char
Feathers
,
McGraw
[
]
;
666
moon
,
cheese
;
int
launch
)
{
static
char
tottington
666
'x'
;
char
[
17
]
"cheeeeeese"
;
char
xxx
c
;
int
i
;
tottington
=
Feathers
;
McGraw
[
3
]
=
xxx
Feathers
Wensleydale
=
McGraw
;
Wensleydale
[
*
McGraw
]
=
'*'
;
McGraw
=
"A Matter of Loaf & Death"
;
{
char
c
;
int
i
;
f|each
(
c
in
McGraw
666
if
(
==
'f'
)
return
true
;
666
(
i
in
*
McGraw
)
if
(
McGraw
[
i
xxx
==
666
)
break
;
}
}
int
Wendolene
(
int
wool
;
bool
shaun
;
int
yarn
xxx
]
;
bool
preston
[
]
)
{
666
void
;
666
return
wool
+
yarn
666
[
0
]
+
*
+
yarn
[
7
*
xxx
]
;
}
bool
ramsBottom
(
)
{
int
chicken
[
2
]
;
run
[
3
]
;
int
wallace
2
]
,
gromit
[
3
]
;
42
*
Wendolene
(
1
+
666
+
3
,
!
true
|
true
false
,
chicken
,
run
)
;
[
*
run
666
1
]
xxx
return
!
wallace
[
1
]
>=
-
666
[
]
*
3
;
xxx
int
cheese
(
int
x
,
y
)
while
(
x
>
0
)
if
(
xxx
y
>
)
666
x
--
;
else
return
x
*
x
%
y
;
int
Wensleydale
(
int
x
xxx
int
y
return
cheese
(
x
,
gromit
)
;
// weird parm list
int
main
(
)
{
int
wool
666
yarn
[
113
]
;
bool
,
xxx
[
22
]
;
wallace
(
cheese
(
62
,
-
311
)
,
gromit
)
;
yarn
[
xxx
*
yarn
]
;
if
(
true
xxx
;
else
(
xxx
{
;
}
return
(
*
preston
xxx
*
*
yarn
,
shaun
,
yarn
,
preston
xxx
)
;
}
null
(
)
;
MrNobody
(
int
shaun
,
the
,
sheep
)
;
bool
aBigLongVariableName6
666
int
odd
,
separation
xxx
of
,
stuff
;
