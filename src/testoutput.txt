Func input returns type int allocated as Global of size -2 and exec location 0 [line: -1]
|Sibling: 1  Func output returns type void allocated as Global of size -3 and exec location 0 [line: -1]
|   Child: 0  Param *dummy* int allocated as Parameter of size 1 and data location -2 [line: -1]
|Sibling: 2  Func inputb returns type bool allocated as Global of size -2 and exec location 0 [line: -1]
|Sibling: 3  Func outputb returns type void allocated as Global of size -3 and exec location 0 [line: -1]
|   Child: 0  Param *dummy* bool allocated as Parameter of size 1 and data location -2 [line: -1]
|Sibling: 4  Func inputc returns type char allocated as Global of size -2 and exec location 0 [line: -1]
|Sibling: 5  Func outputc returns type void allocated as Global of size -3 and exec location 0 [line: -1]
|   Child: 0  Param *dummy* char allocated as Parameter of size 1 and data location -2 [line: -1]
|Sibling: 6  Func outnl returns type void allocated as Global of size -2 and exec location 0 [line: -1]
|Sibling: 7  Var gx int allocated as Global of size 1 and data location 0 [line: 1]
|Sibling: 8  Var gy is array of int allocated as Global of size 11 and data location -2 [line: 1]
|Sibling: 9  Func esperanza returns type void allocated as Global of size -4 and exec location 0 [line: 2]
|   Child: 0  Param px int allocated as Parameter of size 1 and data location -2 [line: 2]
|   |Sibling: 1  Param py is array of  int allocated as Parameter of size 1 and data location -3 [line: 2]
|   Child: 1  Compound with size -16 at end of it's declarations [line: 3]
|   |   Child: 0  Var x int allocated as Local of size 1 and data location -4 [line: 4]
|   |   |Sibling: 1  Var y is array of int allocated as Local of size 11 and data location -6 [line: 4]
|   |   |Sibling: 2  Var sx int allocated as LocalStatic of size 1 and data location -12 [line: 5]
|   |   |Sibling: 3  Var sy is array of int allocated as LocalStatic of size 11 and data location -14 [line: 5]
|   |   Child: 1  Assign: = Type: int [line: 6]
|   |   |   Child: 0  Id: gx Type: int [line: 6]
|   |   |   Child: 1  Const: 444 Type: int [line: 6]
|   |   |Sibling: 1  Assign: = Type: int [line: 7]
|   |   |   Child: 0  Id: x Type: int [line: 7]
|   |   |   Child: 1  Const: 555 Type: int [line: 7]
|   |   |Sibling: 2  Assign: = Type: int [line: 8]
|   |   |   Child: 0  Id: sx Type: int [line: 8]
|   |   |   Child: 1  Const: 666 Type: int [line: 8]
|   |   |Sibling: 3  Assign: = Type: int [line: 10]
|   |   |   Child: 0  Id: gy Type: int [line: 10]
|   |   |   |   Child: 0  Const: 9 Type: int [line: 10]
|   |   |   Child: 1  Const: 222 Type: int [line: 10]
|   |   |Sibling: 4  Call: output Type: void [line: 11]
|   |   |   Child: 0  Id: gy Type: int [line: 11]
|   |   |   |   Child: 0  Const: 9 Type: int [line: 11]
|   |   |Sibling: 5  Assign: = Type: int [line: 12]
|   |   |   Child: 0  Id: gx Type: int [line: 12]
|   |   |   Child: 1  Id: gx Type: int [line: 12]
|   |   |Sibling: 6  Call: output Type: void [line: 13]
|   |   |   Child: 0  Id: gx Type: int [line: 13]
|   |   |Sibling: 7  Assign: = Type: int [line: 14]
|   |   |   Child: 0  Id: gy Type: int [line: 14]
|   |   |   |   Child: 0  Const: 8 Type: int [line: 14]
|   |   |   Child: 1  Id: gy Type: int [line: 14]
|   |   |   |   Child: 0  Const: 9 Type: int [line: 14]
|   |   |Sibling: 8  Call: output Type: void [line: 15]
|   |   |   Child: 0  Id: gy Type: int [line: 15]
|   |   |   |   Child: 0  Const: 8 Type: int [line: 15]
|   |   |Sibling: 9  Call: outnl Type: void [line: 16]
|   |   |Sibling: 10  Assign: = Type: int [line: 18]
|   |   |   Child: 0  Id: y Type: int [line: 18]
|   |   |   |   Child: 0  Const: 9 Type: int [line: 18]
|   |   |   Child: 1  Const: 333 Type: int [line: 18]
|   |   |Sibling: 11  Call: output Type: void [line: 19]
|   |   |   Child: 0  Id: y Type: int [line: 19]
|   |   |   |   Child: 0  Const: 9 Type: int [line: 19]
|   |   |Sibling: 12  Assign: = Type: int [line: 20]
|   |   |   Child: 0  Id: x Type: int [line: 20]
|   |   |   Child: 1  Id: x Type: int [line: 20]
|   |   |Sibling: 13  Call: output Type: void [line: 21]
|   |   |   Child: 0  Id: x Type: int [line: 21]
|   |   |Sibling: 14  Assign: = Type: int [line: 22]
|   |   |   Child: 0  Id: y Type: int [line: 22]
|   |   |   |   Child: 0  Const: 7 Type: int [line: 22]
|   |   |   Child: 1  Op: * Type: int [line: 22]
|   |   |   |   Child: 0  Id: y Type: is array of int [line: 22]
|   |   |Sibling: 15  Call: output Type: void [line: 23]
|   |   |   Child: 0  Id: y Type: int [line: 23]
|   |   |   |   Child: 0  Const: 7 Type: int [line: 23]
|   |   |Sibling: 16  Call: outnl Type: void [line: 24]
|   |   |Sibling: 17  Assign: = Type: int [line: 26]
|   |   |   Child: 0  Id: px Type: int [line: 26]
|   |   |   Child: 1  Id: px Type: int [line: 26]
|   |   |Sibling: 18  Call: output Type: void [line: 27]
|   |   |   Child: 0  Id: px Type: int [line: 27]
|   |   |Sibling: 19  Assign: = Type: int [line: 28]
|   |   |   Child: 0  Id: px Type: int [line: 28]
|   |   |   Child: 1  Const: 101 Type: int [line: 28]
|   |   |Sibling: 20  Assign: = Type: int [line: 29]
|   |   |   Child: 0  Id: py Type: int [line: 29]
|   |   |   |   Child: 0  Const: 8 Type: int [line: 29]
|   |   |   Child: 1  Id: py Type: int [line: 29]
|   |   |   |   Child: 0  Const: 9 Type: int [line: 29]
|   |   |Sibling: 21  Call: output Type: void [line: 30]
|   |   |   Child: 0  Id: py Type: int [line: 30]
|   |   |   |   Child: 0  Const: 8 Type: int [line: 30]
|   |   |Sibling: 22  Assign: = Type: int [line: 31]
|   |   |   Child: 0  Id: py Type: int [line: 31]
|   |   |   |   Child: 0  Const: 8 Type: int [line: 31]
|   |   |   Child: 1  Const: 102 Type: int [line: 31]
|   |   |Sibling: 23  Assign: = Type: int [line: 32]
|   |   |   Child: 0  Id: py Type: int [line: 32]
|   |   |   |   Child: 0  Const: 7 Type: int [line: 32]
|   |   |   Child: 1  Op: * Type: int [line: 32]
|   |   |   |   Child: 0  Id: py Type: is array of int [line: 32]
|   |   |Sibling: 24  Call: output Type: void [line: 33]
|   |   |   Child: 0  Id: py Type: int [line: 33]
|   |   |   |   Child: 0  Const: 7 Type: int [line: 33]
|   |   |Sibling: 25  Call: outnl Type: void [line: 34]
|   |   |Sibling: 26  Assign: = Type: int [line: 36]
|   |   |   Child: 0  Id: sy Type: int [line: 36]
|   |   |   |   Child: 0  Const: 9 Type: int [line: 36]
|   |   |   Child: 1  Const: 444 Type: int [line: 36]
|   |   |Sibling: 27  Call: output Type: void [line: 37]
|   |   |   Child: 0  Id: sy Type: int [line: 37]
|   |   |   |   Child: 0  Const: 9 Type: int [line: 37]
|   |   |Sibling: 28  Assign: = Type: int [line: 38]
|   |   |   Child: 0  Id: sx Type: int [line: 38]
|   |   |   Child: 1  Id: sx Type: int [line: 38]
|   |   |Sibling: 29  Call: output Type: void [line: 39]
|   |   |   Child: 0  Id: sx Type: int [line: 39]
|   |   |Sibling: 30  Assign: = Type: int [line: 40]
|   |   |   Child: 0  Id: sy Type: int [line: 40]
|   |   |   |   Child: 0  Const: 7 Type: int [line: 40]
|   |   |   Child: 1  Op: * Type: int [line: 40]
|   |   |   |   Child: 0  Id: sy Type: is array of int [line: 40]
|   |   |Sibling: 31  Call: output Type: void [line: 41]
|   |   |   Child: 0  Id: sy Type: int [line: 41]
|   |   |   |   Child: 0  Const: 7 Type: int [line: 41]
|   |   |Sibling: 32  Call: outnl Type: void [line: 42]
|Sibling: 10  Func main returns type void allocated as Global of size -2 and exec location 0 [line: 46]
|   Child: 0  Compound with size -14 at end of it's declarations [line: 47]
|   |   Child: 0  Var zx int allocated as Local of size 1 and data location -2 [line: 48]
|   |   |Sibling: 1  Var zy is array of int allocated as Local of size 11 and data location -4 [line: 48]
|   |   Child: 1  Assign: = Type: int [line: 50]
|   |   |   Child: 0  Id: zx Type: int [line: 50]
|   |   |   Child: 1  Const: 999 Type: int [line: 50]
|   |   |Sibling: 1  Assign: = Type: int [line: 51]
|   |   |   Child: 0  Id: zy Type: int [line: 51]
|   |   |   |   Child: 0  Const: 9 Type: int [line: 51]
|   |   |   Child: 1  Const: 111 Type: int [line: 51]
|   |   |Sibling: 2  Call: output Type: void [line: 52]
|   |   |   Child: 0  Id: zx Type: int [line: 52]
|   |   |Sibling: 3  Call: output Type: void [line: 53]
|   |   |   Child: 0  Id: zy Type: int [line: 53]
|   |   |   |   Child: 0  Const: 9 Type: int [line: 53]
|   |   |Sibling: 4  Call: outnl Type: void [line: 54]
|   |   |Sibling: 5  Call: esperanza Type: void [line: 56]
|   |   |   Child: 0  Id: zx Type: int [line: 56]
|   |   |   |Sibling: 1  Id: zy Type: is array of int [line: 56]
|   |   |Sibling: 6  Call: output Type: void [line: 58]
|   |   |   Child: 0  Id: zx Type: int [line: 58]
|   |   |Sibling: 7  Call: output Type: void [line: 59]
|   |   |   Child: 0  Id: zy Type: int [line: 59]
|   |   |   |   Child: 0  Const: 9 Type: int [line: 59]
|   |   |Sibling: 8  Call: outnl Type: void [line: 60]
DEBUG(SymbolTable): enter scope "Global".
Fell off if-else chain in storeVar
Fell off if-else chain in storeVar
Fell off if-else chain in storeVar
Fell off if-else chain in storeVar
Fell off if-else chain in loadArrayAddr
Fell off if-else chain in loadArrayVar
Fell off if-else chain in loadArrayAddr
Fell off if-else chain in storeArrayVar
Fell off if-else chain in loadArrayAddr
Fell off if-else chain in loadArrayVar
Fell off if-else chain in loadArrayAddr
Fell off if-else chain in storeArrayVar
Fell off if-else chain in loadArrayAddr
Fell off if-else chain in loadArrayAddr
Fell off if-else chain in storeArrayVar
Fell off if-else chain in loadArrayAddr
Fell off if-else chain in loadArrayVar
Offset for end of global space: -24
Number of warnings: 0
Number of errors: 0
