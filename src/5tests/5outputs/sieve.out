Func input returns type int allocated as Global of size -2 and exec location 0 [line: -1]
|Sibling: 1  Func output returns type void allocated as Global of size -3 and exec location 0 [line: -1]
|   Child: 0  Param *dummy* int allocated as Parameter of size 1 and data location -2 [line: -1]
|Sibling: 2  Func inputb returns type bool allocated as Global of size -2 and exec location 0 [line: -1]
|Sibling: 3  Func outputb returns type void allocated as Global of size -3 and exec location 0 [line: -1]
|   Child: 0  Param *dummy* bool allocated as Parameter of size 1 and data location -2 [line: -1]
|Sibling: 4  Func inputc returns type char allocated as Global of size -2 and exec location 0 [line: -1]
|Sibling: 5  Func outputc returns type void allocated as Global of size -3 and exec location 0 [line: -1]
|   Child: 0  Param *dummy* char allocated as Parameter of size 1 and data location -2 [line: -1]
|Sibling: 6  Func outnl returns type void allocated as Global of size -2 and exec location 0 [line: -1]
|Sibling: 7  Func main returns type int allocated as Global of size -2 and exec location 0 [line: 4]
|   Child: 1  Compound with size -1006 at end of it's declarations [line: 5]
|   |   Child: 0  Var max int allocated as Local of size 1 and data location -2 [line: 6]
|   |   |Sibling: 1  Var k int allocated as Local of size 1 and data location -3 [line: 6]
|   |   |Sibling: 2  Var n is array of bool allocated as Local of size 1002 and data location -5 [line: 7]
|   |   Child: 1  Assign: = Type: int [line: 9]
|   |   |   Child: 0  Id: max Type: int [line: 9]
|   |   |   Child: 1  Const: 1000 Type: int [line: 9]
|   |   |Sibling: 1  Assign: = Type: int [line: 11]
|   |   |   Child: 0  Id: k Type: int [line: 11]
|   |   |   Child: 1  Const: 2 Type: int [line: 11]
|   |   |Sibling: 2  While [line: 12]
|   |   |   Child: 0  Op: <= Type: bool [line: 12]
|   |   |   |   Child: 0  Id: k Type: int [line: 12]
|   |   |   |   Child: 1  Id: max Type: int [line: 12]
|   |   |   Child: 1  Compound with size -1006 at end of it's declarations [line: 12]
|   |   |   |   Child: 1  Assign: = Type: bool [line: 12]
|   |   |   |   |   Child: 0  Id: n Type: bool [line: 12]
|   |   |   |   |   |   Child: 0  Id: k Type: int [line: 12]
|   |   |   |   |   Child: 1  Const: true Type: bool [line: 12]
|   |   |   |   |Sibling: 1  Assign: ++ Type: int [line: 12]
|   |   |   |   |   Child: 0  Id: k Type: int [line: 12]
|   |   |Sibling: 3  Assign: = Type: int [line: 14]
|   |   |   Child: 0  Id: k Type: int [line: 14]
|   |   |   Child: 1  Const: 2 Type: int [line: 14]
|   |   |Sibling: 4  While [line: 15]
|   |   |   Child: 0  Op: <= Type: bool [line: 15]
|   |   |   |   Child: 0  Op: * Type: int [line: 15]
|   |   |   |   |   Child: 0  Id: k Type: int [line: 15]
|   |   |   |   |   Child: 1  Id: k Type: int [line: 15]
|   |   |   |   Child: 1  Id: max Type: int [line: 15]
|   |   |   Child: 1  Compound with size -1007 at end of it's declarations [line: 15]
|   |   |   |   Child: 0  Var j int allocated as Local of size 1 and data location -1006 [line: 16]
|   |   |   |   Child: 1  Assign: = Type: int [line: 18]
|   |   |   |   |   Child: 0  Id: j Type: int [line: 18]
|   |   |   |   |   Child: 1  Op: * Type: int [line: 18]
|   |   |   |   |   |   Child: 0  Id: k Type: int [line: 18]
|   |   |   |   |   |   Child: 1  Id: k Type: int [line: 18]
|   |   |   |   |Sibling: 1  While [line: 19]
|   |   |   |   |   Child: 0  Op: <= Type: bool [line: 19]
|   |   |   |   |   |   Child: 0  Id: j Type: int [line: 19]
|   |   |   |   |   |   Child: 1  Id: max Type: int [line: 19]
|   |   |   |   |   Child: 1  Compound with size -1007 at end of it's declarations [line: 19]
|   |   |   |   |   |   Child: 1  Assign: = Type: bool [line: 20]
|   |   |   |   |   |   |   Child: 0  Id: n Type: bool [line: 20]
|   |   |   |   |   |   |   |   Child: 0  Id: j Type: int [line: 20]
|   |   |   |   |   |   |   Child: 1  Const: false Type: bool [line: 20]
|   |   |   |   |   |   |Sibling: 1  Assign: = Type: int [line: 21]
|   |   |   |   |   |   |   Child: 0  Id: j Type: int [line: 21]
|   |   |   |   |   |   |   Child: 1  Op: + Type: int [line: 21]
|   |   |   |   |   |   |   |   Child: 0  Id: j Type: int [line: 21]
|   |   |   |   |   |   |   |   Child: 1  Id: k Type: int [line: 21]
|   |   |   |   |Sibling: 2  Assign: ++ Type: int [line: 23]
|   |   |   |   |   Child: 0  Id: k Type: int [line: 23]
|   |   |   |   |Sibling: 3  While [line: 24]
|   |   |   |   |   Child: 0  Op: & Type: bool [line: 24]
|   |   |   |   |   |   Child: 0  Op: <= Type: bool [line: 24]
|   |   |   |   |   |   |   Child: 0  Id: k Type: int [line: 24]
|   |   |   |   |   |   |   Child: 1  Id: max Type: int [line: 24]
|   |   |   |   |   |   Child: 1  Op: ! Type: bool [line: 24]
|   |   |   |   |   |   |   Child: 0  Id: n Type: bool [line: 24]
|   |   |   |   |   |   |   |   Child: 0  Id: k Type: int [line: 24]
|   |   |   |   |   Child: 1  Assign: ++ Type: int [line: 24]
|   |   |   |   |   |   Child: 0  Id: k Type: int [line: 24]
|   |   |Sibling: 5  Compound with size -1007 at end of it's declarations [line: 27]
|   |   |   Child: 0  Var numPrimes int allocated as Local of size 1 and data location -1006 [line: 28]
|   |   |   Child: 1  Assign: = Type: int [line: 30]
|   |   |   |   Child: 0  Id: k Type: int [line: 30]
|   |   |   |   Child: 1  Const: 2 Type: int [line: 30]
|   |   |   |Sibling: 1  Assign: = Type: int [line: 31]
|   |   |   |   Child: 0  Id: numPrimes Type: int [line: 31]
|   |   |   |   Child: 1  Const: 0 Type: int [line: 31]
|   |   |   |Sibling: 2  While [line: 32]
|   |   |   |   Child: 0  Op: <= Type: bool [line: 32]
|   |   |   |   |   Child: 0  Id: k Type: int [line: 32]
|   |   |   |   |   Child: 1  Id: max Type: int [line: 32]
|   |   |   |   Child: 1  Compound with size -1007 at end of it's declarations [line: 32]
|   |   |   |   |   Child: 1  If [line: 33]
|   |   |   |   |   |   Child: 0  Id: n Type: bool [line: 33]
|   |   |   |   |   |   |   Child: 0  Id: k Type: int [line: 33]
|   |   |   |   |   |   Child: 1  Compound with size -1007 at end of it's declarations [line: 33]
|   |   |   |   |   |   |   Child: 1  Assign: ++ Type: int [line: 34]
|   |   |   |   |   |   |   |   Child: 0  Id: numPrimes Type: int [line: 34]
|   |   |   |   |   |   |   |Sibling: 1  Call: output Type: void [line: 35]
|   |   |   |   |   |   |   |   Child: 0  Id: k Type: int [line: 35]
|   |   |   |   |   |   |   |Sibling: 2  Call: outnl Type: void [line: 36]
|   |   |   |   |   |Sibling: 1  Assign: ++ Type: int [line: 38]
|   |   |   |   |   |   Child: 0  Id: k Type: int [line: 38]
|   |   |   |Sibling: 3  Call: outnl Type: void [line: 41]
|   |   |   |Sibling: 4  Call: output Type: void [line: 42]
|   |   |   |   Child: 0  Id: numPrimes Type: int [line: 42]
|   |   |   |Sibling: 5  Call: outnl Type: void [line: 43]
|   |   |Sibling: 6  Return [line: 46]
|   |   |   Child: 0  Const: 0 Type: int [line: 46]
Offset for end of global space: 0
Number of warnings: 0
Number of errors: 0
